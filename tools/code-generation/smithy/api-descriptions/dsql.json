{
    "smithy": "2.0",
    "shapes": {
        "com.amazonaws.dsql#AccessDeniedException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "User does not have sufficient access to perform this action",
                "smithy.api#error": "client",
                "smithy.api#httpError": 403
            }
        },
        "com.amazonaws.dsql#Arn": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Amazon Resource Name",
                "smithy.api#length": {
                    "min": 1,
                    "max": 1011
                },
                "smithy.api#pattern": "^arn:.+$"
            }
        },
        "com.amazonaws.dsql#AxdbFrontend": {
            "type": "service",
            "version": "2018-05-10",
            "operations": [
                {
                    "target": "com.amazonaws.dsql#ListTagsForResource"
                },
                {
                    "target": "com.amazonaws.dsql#TagResource"
                },
                {
                    "target": "com.amazonaws.dsql#UntagResource"
                }
            ],
            "resources": [
                {
                    "target": "com.amazonaws.dsql#Cluster"
                }
            ],
            "errors": [
                {
                    "target": "com.amazonaws.dsql#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.dsql#InternalServerException"
                },
                {
                    "target": "com.amazonaws.dsql#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.dsql#ValidationException"
                }
            ],
            "traits": {
                "aws.api#service": {
                    "sdkId": "DSQL",
                    "arnNamespace": "dsql",
                    "endpointPrefix": "dsql",
                    "cloudTrailEventSource": "dsql.amazonaws.com"
                },
                "aws.auth#sigv4": {
                    "name": "dsql"
                },
                "aws.protocols#restJson1": {},
                "smithy.api#cors": {},
                "smithy.api#documentation": "Amazon Aurora DSQL is a serverless, distributed SQL database suitable for workloads of any size. Aurora DSQL provides you with a familiar relational database experience based on PostgreSQL that lets you get started quickly. Aurora DSQL offers reliable multi-AZ database clusters in single and multi-Region configurations. Aurora DSQL supports active-active read and write to endpoints, so Aurora DSQL is always available even if an Availability Zone or if an AWS Region is unavailable. With Aurora DSQL, you don't have to manage, patch, or scale any servers to manage, patch, or scale. There are no maintenance windows or planned downtime.",
                "smithy.api#title": "Amazon Aurora DSQL",
                "smithy.rules#endpointRuleSet": {
                    "version": "1.0",
                    "parameters": {
                        "Region": {
                            "builtIn": "AWS::Region",
                            "required": false,
                            "documentation": "The AWS region used to dispatch the request.",
                            "type": "String"
                        },
                        "UseDualStack": {
                            "builtIn": "AWS::UseDualStack",
                            "required": true,
                            "default": false,
                            "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                            "type": "Boolean"
                        },
                        "UseFIPS": {
                            "builtIn": "AWS::UseFIPS",
                            "required": true,
                            "default": false,
                            "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                            "type": "Boolean"
                        },
                        "Endpoint": {
                            "builtIn": "SDK::Endpoint",
                            "required": false,
                            "documentation": "Override the endpoint used to send this request",
                            "type": "String"
                        }
                    },
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                            "type": "error"
                                        },
                                        {
                                            "conditions": [],
                                            "endpoint": {
                                                "url": {
                                                    "ref": "Endpoint"
                                                },
                                                "properties": {},
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "aws.partition",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        }
                                                    ],
                                                    "assign": "PartitionResult"
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        true,
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "PartitionResult"
                                                                                },
                                                                                "supportsFIPS"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        true,
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "PartitionResult"
                                                                                },
                                                                                "supportsDualStack"
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [],
                                                                            "endpoint": {
                                                                                "url": "https://dsql-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                "properties": {},
                                                                                "headers": {}
                                                                            },
                                                                            "type": "endpoint"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "PartitionResult"
                                                                                },
                                                                                "supportsFIPS"
                                                                            ]
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [],
                                                                            "endpoint": {
                                                                                "url": "https://dsql-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                                "properties": {},
                                                                                "headers": {}
                                                                            },
                                                                            "type": "endpoint"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        true,
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "PartitionResult"
                                                                                },
                                                                                "supportsDualStack"
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [],
                                                                            "endpoint": {
                                                                                "url": "https://dsql.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                "properties": {},
                                                                                "headers": {}
                                                                            },
                                                                            "type": "endpoint"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://dsql.{Region}.{PartitionResult#dnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid Configuration: Missing Region",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        }
                    ]
                },
                "smithy.rules#endpointTests": {
                    "testCases": [
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "error": "DualStack is enabled but this partition does not support DualStack"
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql-fips.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "error": "DualStack is enabled but this partition does not support DualStack"
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://dsql.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips enabled and dualstack disabled",
                            "expect": {
                                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips disabled and dualstack enabled",
                            "expect": {
                                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "Missing region",
                            "expect": {
                                "error": "Invalid Configuration: Missing Region"
                            }
                        }
                    ],
                    "version": "1.0"
                }
            }
        },
        "com.amazonaws.dsql#ClientToken": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Idempotency Token",
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^[!-~]+$"
            }
        },
        "com.amazonaws.dsql#Cluster": {
            "type": "resource",
            "identifiers": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId"
                }
            },
            "properties": {
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn"
                },
                "status": {
                    "target": "com.amazonaws.dsql#ClusterStatus"
                },
                "creationTime": {
                    "target": "com.amazonaws.dsql#ClusterCreationTime"
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled"
                }
            },
            "create": {
                "target": "com.amazonaws.dsql#CreateCluster"
            },
            "read": {
                "target": "com.amazonaws.dsql#GetCluster"
            },
            "update": {
                "target": "com.amazonaws.dsql#UpdateCluster"
            },
            "delete": {
                "target": "com.amazonaws.dsql#DeleteCluster"
            },
            "list": {
                "target": "com.amazonaws.dsql#ListClusters"
            },
            "collectionOperations": [
                {
                    "target": "com.amazonaws.dsql#CreateMultiRegionClusters"
                },
                {
                    "target": "com.amazonaws.dsql#DeleteMultiRegionClusters"
                }
            ],
            "traits": {
                "aws.api#arn": {
                    "template": "cluster/{identifier}"
                }
            }
        },
        "com.amazonaws.dsql#ClusterArn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {
                    "service": "com.amazonaws.dsql#AxdbFrontend",
                    "resource": "com.amazonaws.dsql#Cluster"
                },
                "smithy.api#documentation": "Cluster ARN"
            }
        },
        "com.amazonaws.dsql#ClusterArnList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.dsql#ClusterArn"
            },
            "traits": {
                "smithy.api#documentation": "List of cluster arns",
                "smithy.api#uniqueItems": {}
            }
        },
        "com.amazonaws.dsql#ClusterCreationTime": {
            "type": "timestamp",
            "traits": {
                "smithy.api#documentation": "Timestamp when the Cluster was created"
            }
        },
        "com.amazonaws.dsql#ClusterId": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Cluster ID"
            }
        },
        "com.amazonaws.dsql#ClusterList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.dsql#ClusterSummary"
            },
            "traits": {
                "smithy.api#documentation": "List of clusters",
                "smithy.api#uniqueItems": {}
            }
        },
        "com.amazonaws.dsql#ClusterPropertyMap": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.dsql#Region"
            },
            "value": {
                "target": "com.amazonaws.dsql#LinkedClusterProperties"
            },
            "traits": {
                "smithy.api#documentation": "Properties for each linked cluster"
            }
        },
        "com.amazonaws.dsql#ClusterStatus": {
            "type": "enum",
            "members": {
                "CREATING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CREATING"
                    }
                },
                "ACTIVE": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "ACTIVE"
                    }
                },
                "UPDATING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "UPDATING"
                    }
                },
                "DELETING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DELETING"
                    }
                },
                "DELETED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DELETED"
                    }
                },
                "FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "FAILED"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Cluster Status"
            }
        },
        "com.amazonaws.dsql#ClusterSummary": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Cluster Summary"
            }
        },
        "com.amazonaws.dsql#ConflictException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Description of the error",
                        "smithy.api#required": {}
                    }
                },
                "resourceId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Identifier of the resource affected"
                    }
                },
                "resourceType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Type of the resource affected"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Updating or deleting a resource can cause an inconsistent state",
                "smithy.api#error": "client",
                "smithy.api#httpError": 409
            }
        },
        "com.amazonaws.dsql#CreateCluster": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#CreateClusterInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#CreateClusterOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ConflictException"
                },
                {
                    "target": "com.amazonaws.dsql#ServiceQuotaExceededException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to create new clusters."
                },
                "smithy.api#documentation": "Create a cluster",
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/cluster"
                }
            }
        },
        "com.amazonaws.dsql#CreateClusterInput": {
            "type": "structure",
            "members": {
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#default": true
                    }
                },
                "tags": {
                    "target": "com.amazonaws.dsql#TagMap",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                },
                "clientToken": {
                    "target": "com.amazonaws.dsql#ClientToken",
                    "traits": {
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#CreateClusterOutput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "status": {
                    "target": "com.amazonaws.dsql#ClusterStatus",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "creationTime": {
                    "target": "com.amazonaws.dsql#ClusterCreationTime",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Output Mixin",
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#CreateMultiRegionClusters": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#CreateMultiRegionClustersInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#CreateMultiRegionClustersOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ConflictException"
                },
                {
                    "target": "com.amazonaws.dsql#ServiceQuotaExceededException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to create multi-Region clusters. This action requires the CreateMultiRegionClusters and CreateCluster permissions in each specified linked Region.",
                    "requiredActions": [
                        "dsql:CreateCluster"
                    ]
                },
                "smithy.api#documentation": "Create clusters in multiple regions",
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/multi-region-clusters"
                }
            }
        },
        "com.amazonaws.dsql#CreateMultiRegionClustersInput": {
            "type": "structure",
            "members": {
                "linkedRegionList": {
                    "target": "com.amazonaws.dsql#RegionList",
                    "traits": {
                        "smithy.api#notProperty": {},
                        "smithy.api#required": {}
                    }
                },
                "clusterProperties": {
                    "target": "com.amazonaws.dsql#ClusterPropertyMap",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                },
                "witnessRegion": {
                    "target": "com.amazonaws.dsql#Region",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "clientToken": {
                    "target": "com.amazonaws.dsql#ClientToken",
                    "traits": {
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#CreateMultiRegionClustersOutput": {
            "type": "structure",
            "members": {
                "linkedClusterArns": {
                    "target": "com.amazonaws.dsql#ClusterArnList",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#DeleteCluster": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#DeleteClusterInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#DeleteClusterOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ConflictException"
                },
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to delete a cluster and all of its data."
                },
                "smithy.api#documentation": "Delete a cluster",
                "smithy.api#examples": [
                    {
                        "title": "Delete Cluster",
                        "input": {
                            "identifier": "kiqenqglxyl2snyvkvnj2c3s2e"
                        }
                    }
                ],
                "smithy.api#http": {
                    "code": 200,
                    "method": "DELETE",
                    "uri": "/cluster/{identifier}"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.dsql#DeleteClusterInput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "clientToken": {
                    "target": "com.amazonaws.dsql#ClientToken",
                    "traits": {
                        "smithy.api#httpQuery": "client-token",
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#DeleteClusterOutput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "status": {
                    "target": "com.amazonaws.dsql#ClusterStatus",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "creationTime": {
                    "target": "com.amazonaws.dsql#ClusterCreationTime",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Output Mixin",
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#DeleteMultiRegionClusters": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#DeleteMultiRegionClustersInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ConflictException"
                },
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to delete multi-Region clusters. This action requires the DeleteMultiRegionClusters and DeleteCluster permissions in each specified linked Region.",
                    "requiredActions": [
                        "dsql:DeleteCluster"
                    ]
                },
                "smithy.api#documentation": "Delete clusters in multiple regions",
                "smithy.api#http": {
                    "code": 200,
                    "method": "DELETE",
                    "uri": "/multi-region-clusters"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.dsql#DeleteMultiRegionClustersInput": {
            "type": "structure",
            "members": {
                "linkedClusterArns": {
                    "target": "com.amazonaws.dsql#ClusterArnList",
                    "traits": {
                        "smithy.api#httpQuery": "linked-cluster-arns",
                        "smithy.api#required": {}
                    }
                },
                "clientToken": {
                    "target": "com.amazonaws.dsql#ClientToken",
                    "traits": {
                        "smithy.api#httpQuery": "client-token",
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#DeletionProtectionEnabled": {
            "type": "boolean",
            "traits": {
                "smithy.api#documentation": "Deletion Protection"
            }
        },
        "com.amazonaws.dsql#GetCluster": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#GetClusterInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#GetClusterOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to get information about a cluster."
                },
                "smithy.api#documentation": "Get a cluster",
                "smithy.api#examples": [
                    {
                        "title": "Get Cluster",
                        "input": {
                            "identifier": "kiqenqglxyl2snyvkvnj2c3s2e"
                        }
                    }
                ],
                "smithy.api#http": {
                    "code": 200,
                    "method": "GET",
                    "uri": "/cluster/{identifier}"
                },
                "smithy.api#readonly": {},
                "smithy.test#smokeTests": [
                    {
                        "id": "GetClusterNotFound",
                        "params": {
                            "identifier": "someIdentifier"
                        },
                        "expect": {
                            "failure": {
                                "errorId": "com.amazonaws.dsql#ResourceNotFoundException"
                            }
                        },
                        "vendorParamsShape": "aws.test#AwsVendorParams",
                        "vendorParams": {
                            "region": "us-east-1"
                        }
                    }
                ],
                "smithy.waiters#waitable": {
                    "ClusterActive": {
                        "documentation": "Wait until a Cluster is ACTIVE",
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "status",
                                        "comparator": "stringEquals",
                                        "expected": "ACTIVE"
                                    }
                                }
                            }
                        ]
                    },
                    "ClusterNotExists": {
                        "documentation": "Wait until a Cluster is gone",
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "errorType": "ResourceNotFoundException"
                                }
                            }
                        ]
                    }
                }
            }
        },
        "com.amazonaws.dsql#GetClusterInput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#GetClusterOutput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "status": {
                    "target": "com.amazonaws.dsql#ClusterStatus",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "creationTime": {
                    "target": "com.amazonaws.dsql#ClusterCreationTime",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "witnessRegion": {
                    "target": "com.amazonaws.dsql#Region",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                },
                "linkedClusterArns": {
                    "target": "com.amazonaws.dsql#ClusterArnList",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Output Mixin",
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#InternalServerException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Description of the error",
                        "smithy.api#required": {}
                    }
                },
                "retryAfterSeconds": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Advice to clients on when the call can be safely retried",
                        "smithy.api#httpHeader": "Retry-After"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Unexpected error during processing of request",
                "smithy.api#error": "server",
                "smithy.api#httpError": 500,
                "smithy.api#retryable": {}
            }
        },
        "com.amazonaws.dsql#LinkedClusterProperties": {
            "type": "structure",
            "members": {
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#default": true
                    }
                },
                "tags": {
                    "target": "com.amazonaws.dsql#TagMap"
                }
            },
            "traits": {
                "smithy.api#documentation": "Linked Cluster Properties"
            }
        },
        "com.amazonaws.dsql#ListClusters": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#ListClustersInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#ListClustersOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to get a list of cluster ARNs associated with the current endpoint and account."
                },
                "smithy.api#documentation": "List clusters",
                "smithy.api#examples": [
                    {
                        "title": "List Clusters",
                        "input": {
                            "maxResults": 20
                        }
                    }
                ],
                "smithy.api#http": {
                    "code": 200,
                    "method": "GET",
                    "uri": "/cluster"
                },
                "smithy.api#paginated": {
                    "inputToken": "nextToken",
                    "outputToken": "nextToken",
                    "pageSize": "maxResults",
                    "items": "clusters"
                },
                "smithy.api#readonly": {},
                "smithy.test#smokeTests": [
                    {
                        "id": "ListClustersSuccess",
                        "params": {},
                        "expect": {
                            "success": {}
                        },
                        "vendorParamsShape": "aws.test#AwsVendorParams",
                        "vendorParams": {
                            "region": "us-east-1"
                        }
                    }
                ]
            }
        },
        "com.amazonaws.dsql#ListClustersInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "target": "com.amazonaws.dsql#MaxResults",
                    "traits": {
                        "smithy.api#default": 20,
                        "smithy.api#httpQuery": "max-results"
                    }
                },
                "nextToken": {
                    "target": "com.amazonaws.dsql#NextToken",
                    "traits": {
                        "smithy.api#httpQuery": "next-token"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#ListClustersOutput": {
            "type": "structure",
            "members": {
                "nextToken": {
                    "target": "com.amazonaws.dsql#NextToken"
                },
                "clusters": {
                    "target": "com.amazonaws.dsql#ClusterList",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#ListTagsForResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#ListTagsForResourceInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#ListTagsForResourceOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to list all tags for an ARN."
                },
                "smithy.api#documentation": "List all Tags on an ARN",
                "smithy.api#examples": [
                    {
                        "title": "List Tags For Resource",
                        "input": {
                            "resourceArn": "arn:aws:dsql:us-east-1:111111222222:cluster/kiqenqglxyl2snyvkvnj2c3s2e"
                        }
                    }
                ],
                "smithy.api#http": {
                    "uri": "/tags/{resourceArn}",
                    "method": "GET"
                },
                "smithy.api#readonly": {}
            }
        },
        "com.amazonaws.dsql#ListTagsForResourceInput": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.dsql#Arn",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#ListTagsForResourceOutput": {
            "type": "structure",
            "members": {
                "tags": {
                    "target": "com.amazonaws.dsql#TagMap"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#MaxResults": {
            "type": "integer",
            "traits": {
                "smithy.api#documentation": "Max results that will be returned per page",
                "smithy.api#range": {
                    "min": 1,
                    "max": 100
                }
            }
        },
        "com.amazonaws.dsql#NextToken": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Opaque token used to retrieve next page"
            }
        },
        "com.amazonaws.dsql#Region": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "AWS Region name (e.g.: 'us-east-1')",
                "smithy.api#length": {
                    "max": 20
                }
            }
        },
        "com.amazonaws.dsql#RegionList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.dsql#Region"
            },
            "traits": {
                "smithy.api#documentation": "List of regions",
                "smithy.api#uniqueItems": {}
            }
        },
        "com.amazonaws.dsql#ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "resourceId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Hypothetical identifier of the resource which does not exist",
                        "smithy.api#required": {}
                    }
                },
                "resourceType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Hypothetical type of the resource which does not exist",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Request references a resource which does not exist",
                "smithy.api#error": "client",
                "smithy.api#httpError": 404
            }
        },
        "com.amazonaws.dsql#ServiceQuotaExceededException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Description of the error",
                        "smithy.api#required": {}
                    }
                },
                "resourceId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Identifier of the resource affected",
                        "smithy.api#required": {}
                    }
                },
                "resourceType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Type of the resource affected",
                        "smithy.api#required": {}
                    }
                },
                "serviceCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Service Quotas requirement to identify originating service",
                        "smithy.api#required": {}
                    }
                },
                "quotaCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Service Quotas requirement to identify originating quota",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Request would cause a service quota to be exceeded",
                "smithy.api#error": "client",
                "smithy.api#httpError": 402
            }
        },
        "com.amazonaws.dsql#TagKey": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Tag Key",
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^[a-zA-Z0-9_.:/=+\\-@ ]*$"
            }
        },
        "com.amazonaws.dsql#TagKeyList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.dsql#TagKey"
            },
            "traits": {
                "smithy.api#documentation": "List of tag keys",
                "smithy.api#length": {
                    "min": 0,
                    "max": 200
                }
            }
        },
        "com.amazonaws.dsql#TagMap": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.dsql#TagKey"
            },
            "value": {
                "target": "com.amazonaws.dsql#TagValue"
            },
            "traits": {
                "smithy.api#documentation": "Map of tags",
                "smithy.api#length": {
                    "min": 0,
                    "max": 200
                }
            }
        },
        "com.amazonaws.dsql#TagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#TagResourceInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.dsql#ServiceQuotaExceededException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to add tags to an ARN."
                },
                "smithy.api#documentation": "Add Tags to an ARN",
                "smithy.api#examples": [
                    {
                        "title": "Tag Resource",
                        "input": {
                            "resourceArn": "arn:aws:dsql:us-east-1:111111222222:cluster/kiqenqglxyl2snyvkvnj2c3s2e",
                            "tags": {
                                "MyKey": "MyValue"
                            }
                        }
                    }
                ],
                "smithy.api#http": {
                    "uri": "/tags/{resourceArn}",
                    "method": "POST"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.dsql#TagResourceInput": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.dsql#Arn",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "tags": {
                    "target": "com.amazonaws.dsql#TagMap",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#TagValue": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Tag Value",
                "smithy.api#length": {
                    "min": 0,
                    "max": 256
                },
                "smithy.api#pattern": "^[a-zA-Z0-9_.:/=+\\-@ ]*$"
            }
        },
        "com.amazonaws.dsql#ThrottlingException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Description of the error",
                        "smithy.api#required": {}
                    }
                },
                "serviceCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Service Quotas requirement to identify originating service"
                    }
                },
                "quotaCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Service Quotas requirement to identify originating quota"
                    }
                },
                "retryAfterSeconds": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Advice to clients on when the call can be safely retried",
                        "smithy.api#httpHeader": "Retry-After"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Request was denied due to request throttling",
                "smithy.api#error": "client",
                "smithy.api#httpError": 429,
                "smithy.api#retryable": {
                    "throttling": true
                }
            }
        },
        "com.amazonaws.dsql#UntagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#UntagResourceInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to remove tags from an ARN."
                },
                "smithy.api#documentation": "Remove Tags from an ARN",
                "smithy.api#examples": [
                    {
                        "title": "Untag Resource",
                        "input": {
                            "resourceArn": "arn:aws:dsql:us-east-1:111111222222:cluster/kiqenqglxyl2snyvkvnj2c3s2e",
                            "tagKeys": [
                                "MyKeyA",
                                "MyKeyB"
                            ]
                        }
                    }
                ],
                "smithy.api#http": {
                    "uri": "/tags/{resourceArn}",
                    "method": "DELETE"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.dsql#UntagResourceInput": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.dsql#Arn",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "tagKeys": {
                    "target": "com.amazonaws.dsql#TagKeyList",
                    "traits": {
                        "smithy.api#httpQuery": "tagKeys",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#UpdateCluster": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.dsql#UpdateClusterInput"
            },
            "output": {
                "target": "com.amazonaws.dsql#UpdateClusterOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.dsql#ConflictException"
                },
                {
                    "target": "com.amazonaws.dsql#ResourceNotFoundException"
                }
            ],
            "traits": {
                "aws.iam#iamAction": {
                    "documentation": "Grants permission to modify the deletion protection status of a given cluster."
                },
                "smithy.api#documentation": "Update a cluster",
                "smithy.api#examples": [
                    {
                        "title": "Update Cluster",
                        "input": {
                            "identifier": "kiqenqglxyl2snyvkvnj2c3s2e",
                            "deletionProtectionEnabled": false
                        }
                    }
                ],
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/cluster/{identifier}"
                }
            }
        },
        "com.amazonaws.dsql#UpdateClusterInput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled"
                },
                "clientToken": {
                    "target": "com.amazonaws.dsql#ClientToken",
                    "traits": {
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.dsql#UpdateClusterOutput": {
            "type": "structure",
            "members": {
                "identifier": {
                    "target": "com.amazonaws.dsql#ClusterId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arn": {
                    "target": "com.amazonaws.dsql#ClusterArn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "status": {
                    "target": "com.amazonaws.dsql#ClusterStatus",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "creationTime": {
                    "target": "com.amazonaws.dsql#ClusterCreationTime",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "deletionProtectionEnabled": {
                    "target": "com.amazonaws.dsql#DeletionProtectionEnabled",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "witnessRegion": {
                    "target": "com.amazonaws.dsql#Region",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                },
                "linkedClusterArns": {
                    "target": "com.amazonaws.dsql#ClusterArnList",
                    "traits": {
                        "smithy.api#notProperty": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Output Mixin",
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.dsql#ValidationException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "reason": {
                    "target": "com.amazonaws.dsql#ValidationExceptionReason",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "fieldList": {
                    "target": "com.amazonaws.dsql#ValidationExceptionFieldList"
                }
            },
            "traits": {
                "smithy.api#documentation": "The input fails to satisfy the constraints specified by an AWS service",
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "com.amazonaws.dsql#ValidationExceptionField": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The field name",
                        "smithy.api#required": {}
                    }
                },
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Message describing why the field failed validation",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A field that caused the error"
            }
        },
        "com.amazonaws.dsql#ValidationExceptionFieldList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.dsql#ValidationExceptionField"
            },
            "traits": {
                "smithy.api#documentation": "List of fields that caused the error"
            }
        },
        "com.amazonaws.dsql#ValidationExceptionReason": {
            "type": "enum",
            "members": {
                "UNKNOWN_OPERATION": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "unknownOperation"
                    }
                },
                "CANNOT_PARSE": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "cannotParse"
                    }
                },
                "FIELD_VALIDATION_FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "fieldValidationFailed"
                    }
                },
                "DELETION_PROTECTION_ENABLED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "deletionProtectionEnabled"
                    }
                },
                "OTHER": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "other"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Reason the request failed validation"
            }
        },
        "smithy.rules#ClientContextParamDefinition": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.rules#ShapeType",
                    "traits": {
                        "smithy.api#documentation": "The Smithy shape type that should be used to generate a client configurable for the rule-set parameter.",
                        "smithy.api#required": {}
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Documentation string to be generated with the client parameter."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A client context parameter definition.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#ShapeType": {
            "type": "enum",
            "members": {
                "STRING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Indicates a Smithy string shape type.",
                        "smithy.api#enumValue": "string"
                    }
                },
                "BOOLEAN": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Indicates a Smithy boolean shape type.",
                        "smithy.api#enumValue": "boolean"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An enum representing supported Smithy shape types.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        }
    }
}